# GitHub Actions CI for Domurion-Service
# Runs on every push to main branch
# - Backend: .NET build, lint, test
# - Frontend: Node.js install, lint, test, build

name: CI

on:
  push:
    branches: [main]

jobs:
  backend:
    name: Backend (.NET)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Domurion/src/Domurion
    env:
      ASPNETCORE_ENVIRONMENT: Production
      CONNECTIONSTRINGS__DEFAULTCONNECTION: ${{ secrets.CONNECTIONSTRINGS__DEFAULTCONNECTION }}
      JWT_KEY: ${{ secrets.JWT_KEY }}
      JWT_ISSUER: ${{ secrets.JWT_ISSUER }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      SMTP_HOST: ${{ secrets.SMTP_HOST }}
      SMTP_PORT: ${{ secrets.SMTP_PORT }}
      SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
      SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
      SMTP_FROM: ${{ secrets.SMTP_FROM }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore --configuration Release
      - name: Lint (format check)
        run: dotnet format Domurion.sln --verify-no-changes
      - name: Run tests
        run: dotnet test --no-build --verbosity normal --logger "trx;LogFileName=test-results.trx"
        working-directory: Domurion/src/Domurion
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-results
          path: Domurion/src/Domurion/TestResults/

  frontend:
    name: Frontend (Node.js/Svelte)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json
      - name: Install dependencies
        run: npm ci
        working-directory: client
      - name: Build
        run: npm run build --if-present
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: client/dist/
